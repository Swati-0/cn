#include <bits/stdc++.h>
/************************************************************

    Following is the TreeNode class structure

    template <typename T>
    class TreeNode {
       public:
        T data;
        TreeNode<T> *left;
        TreeNode<T> *right;

        TreeNode(T data) {
            this->data = data;
            left = NULL;
            right = NULL;
        }
    };

************************************************************/

vector<int> bottomView(TreeNode<int> * root){
    // Write your code here.
    vector<int> ans;
    if(root==NULL)
    return ans;
    map<int,int> topNode;
    queue<pair<TreeNode<int> *, int>> q;

    q.push(make_pair(root,0));

    while(!q.empty()){
        pair<TreeNode<int> *, int> temp=q.front();
        q.pop();
        TreeNode<int> *frontnode=temp.first;
        int hd=temp.second;
        topNode[hd]=frontnode->data;

        if(frontnode->left)
        q.push(make_pair(frontnode->left,hd-1));

        if(frontnode->right)
        q.push(make_pair(frontnode->right,hd+1));
    }
    for(auto i:topNode)
    ans.push_back(i.second);

    return ans;
}
